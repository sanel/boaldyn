#!/usr/bin/env python

import socket, multiprocessing 

DEFAULT_RECV_SIZE   = 1024

class BoaldynClient(object):
    "Creates boaldyn client that listens on given (or default port)."
    def __init__(self, host = '127.0.0.1', port = 8866):
        self.host = host; self.port = port

    def start(self):
        "Starts server."
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.bind((self.host, self.port))
        self.socket.listen(1)

        while 1:
            con, addr = self.socket.accept()
            process = multiprocessing.Process(target = self.handle, args = (con, addr))
            process.daemon = True
            process.start()

    def handle(self, connection, address):
        try:
            while 1:
                data = connection.recv(1024).strip()
                if data == "QUIT": break
                print data
        finally:
            connection.close()

def start_client():
    try:
        c = BoaldynClient(port = 8867).start()
    finally:
        for p in multiprocessing.active_children():
            p.terminate(); p.join()
            
start_client()
